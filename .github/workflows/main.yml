name: PR Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.mk }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t myapp:${{ github.sha }} .

    - name: Deploy Docker container
      run: |
        docker run -d --name myapp_${{ github.event.number }} -p 8080:80 myapp:${{ github.sha }}

    - name: Post deployment comment
      run: |
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             -d '{"body":"Deployment started for PR #${{ github.event.number }}. View it [here](http://yourdomain.com/myapp_${{ github.event.number }})."}' \
             https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
    - name: Clean up Docker container
      run: |
        docker stop myapp_${{ github.event.number }}
        docker rm myapp_${{ github.event.number }}

    - name: Post cleanup comment
      run: |
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             -d '{"body":"Deployment for PR #${{ github.event.number }} has been cleaned up."}' \
             https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments
